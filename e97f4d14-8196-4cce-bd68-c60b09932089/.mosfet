{
  "layout": "panel",
  "rdbmsId": "e97f4d14-8196-4cce-bd68-c60b09932089",
  "hidden": true,
  "insightName": "Stock Market Dashboard - 0",
  "recipe": "AddPanel ( 0 ) ;Panel ( 0 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"STANDARD\" , \"opacity\" : 100 } } ] ) ;Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003e(\u003cFrame\u003e | UnfilterFrame(\u003cSelectedColumn\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" , \"Sunburst\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif((IsEmpty(\u003cSelectedValues\u003e)),(\u003cFrame\u003e | UnfilterFrame(\u003cSelectedColumn\u003e)), (\u003cFrame\u003e | SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e)));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 0 ) | RetrievePanelEvents ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;Panel ( 0 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"app_id\":\"NEWSEMOSSAPP\"}\u003c/encode\u003e\" ) ;## Set Up ##AddPanel ( 0 ) ;Panel ( 0 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"STANDARD\" , \"opacity\" : 100 } } ] ) ;RSource ( filePath \u003d [ \"sentiment.r\" ] , space \u003d [ \"911bf0e9-0378-45bd-9461-87238e9d3b2f\" ] ) ;## Create Line Chart Panel ##AddPanel ( 1 ) ;Panel ( 1 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"STANDARD\" , \"opacity\" : 100 } } ] ) ;Panel ( 1 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003e(\u003cFrame\u003e | UnfilterFrame(\u003cSelectedColumn\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" , \"Sunburst\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif((IsEmpty(\u003cSelectedValues\u003e)),(\u003cFrame\u003e | UnfilterFrame(\u003cSelectedColumn\u003e)), (\u003cFrame\u003e | SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e)));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 1 ) | RetrievePanelEvents ( ) ;Panel ( 1 ) | SetPanelLabel ( \"Line Chart of Stock Price\" ) ;Panel ( 1 ) | SetPanelView ( \"text-widget\" ) ;Panel ( 1 ) | SetPanelView ( \"text-widget\" , \"\u003cencode\u003e{\"html\":\"\u003cbr\u003e\\n\u003cbr\u003e\\n\u003cdiv class \u003d\\\"mainKPI2\\\"\u003e\\n    \u003cfont color\u003d\\\"#28aae1\\\"\u003eSelect a Stock to See Historical Performance\u003c/font\u003e\\n\u003c/div\u003e\\n\\n\u003cstyle\u003e\\n#TextWidget .mainKPI2{\\n\\tmargin: 0 auto;\\n\\tmargin-left: auto;\\n\\tmargin-right: auto;\\n\\ttext-align:center;\\n\\t\\n\\tfont-size: 20px;\\n\\tfont-weight: normal;\\n}\\n\u003c/style\u003e\",\"varList\":[{\"name\":\"\",\"query\":\"\"}],\"freeze\":false,\"loading\":true}\u003c/encode\u003e\" ) ;## Create Gauge Panel ##AddPanel ( 2 ) ;Panel ( 2 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"STANDARD\" , \"opacity\" : 100 } } ] ) ;Panel ( 2 ) | SetPanelLabel ( \"Gauge of Sentiment\" ) ;Panel ( 2 ) | SetPanelView ( \"text-widget\" ) ;Panel ( 2 ) | SetPanelView ( \"text-widget\" , \"\u003cencode\u003e{\"html\":\"\u003cbr\u003e\\n\u003cbr\u003e\\n\u003cdiv class \u003d\\\"mainKPI2\\\"\u003e\\n    \u003cfont color\u003d\\\"#28aae1\\\"\u003eSelect a Stock to See Twitter Sentiment\u003c/font\u003e\\n\u003c/div\u003e\\n\\n\u003cstyle\u003e\\n#TextWidget .mainKPI2{\\n\\tmargin: 0 auto;\\n\\tmargin-left: auto;\\n\\tmargin-right: auto;\\n\\ttext-align:center;\\n\\t\\n\\tfont-size: 20px;\\n\\tfont-weight: normal;\\n}\\n\u003c/style\u003e\",\"varList\":[{\"name\":\"\",\"query\":\"\"}],\"freeze\":false,\"loading\":true}\u003c/encode\u003e\" ) ;## Create KPI Panel ##AddPanel ( 3 ) ;Panel ( 3 ) | SetPanelView ( \"text-widget\" ) ;Panel ( 3 ) | SetPanelView ( \"text-widget\" , \"\u003cencode\u003e{\"html\":\"\u003cdiv class\u003d\\\"toggle-container\\\"\u003e\\n\\t\\t\u003cbutton  ng-init\u003d\\\"toggle \u003d true\\\" class\u003d\\\"toggle-button\\\" ng-click\u003d\\\"toggle \u003d !toggle\\\"\u003e\u003cdiv ng-if\u003d\\\"toggle\\\"\u003eSee Data Flow\u003c/div\u003e\u003cdiv ng-if\u003d\\\"!toggle\\\"\u003eHide Data Flow\u003c/div\u003e\u003c/button\u003e\\n\u003c/div\u003e\\n\u003cdiv ng-if\u003d\\\"!toggle\\\" class\u003d\\\"center\\\"\u003e\\n\\t\u003cimg src\u003d\\\"https://github.com/semossvideos/stock-description-image/blob/master/textwidgetpanel.JPG?raw\u003dtrue\\\" alt\u003d\\\"test\\\" class\u003d\\\"center\\\"\u003e\\n\u003c/div\u003e\\n\u003cbr\u003e\\n\u003cbr\u003e\\n\u003cdiv class \u003d\\\"mainKPI2\\\"\u003e\\n    \u003cfont color\u003d\\\"#28aae1\\\"\u003eSelect a Stock to See Key Metrics\u003c/font\u003e\\n\u003c/div\u003e\\n\\n\u003cstyle\u003e\\n#TextWidget .mainKPI2{\\n\\tmargin: 0 auto;\\n\\tmargin-left: auto;\\n\\tmargin-right: auto;\\n\\ttext-align:center;\\n\\t\\n\\tfont-size: 20px;\\n\\tfont-weight: normal;\\n}\\n\\n#TextWidget {\\n    --teal: #00a8c1;\\n    --dark-blue: #17233c;\\n    --smoke-gray: #efefef;\\n}\\n\\n#TextWidget .toggle-container {\\n        /* margin-top: 5px; */\\n        margin-bottom: 10px;\\n    }\\n\\n#TextWidget .toggle-container button {\\n    float: right;\\n    margin-right: 25px;\\n    margin-top: 5px;\\n    background-color: var(--teal);\\n    color: white;\\n    font-size: .9em;\\n    cursor: pointer;      \\n    padding: 8px;  \\n    border-radius: 2px;\\n    outline: none;\\n    border: none;\\n}\\n\\n#TextWidget .center{\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 80%;\\n}\\n\\n\u003c/style\u003e\",\"varList\":[{\"name\":\"\",\"query\":\"\"}],\"freeze\":false,\"loading\":true}\u003c/encode\u003e\" ) ;## Create Tweets TW Panel ##AddPanel ( 4 ) ;Panel ( 4 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"STANDARD\" , \"opacity\" : 100 } } ] ) ;Panel ( 4 ) | SetPanelLabel ( \"Tweets\" ) ;Panel ( 4 ) | SetPanelView ( \"text-widget\" ) ;Panel ( 4 ) | SetPanelView ( \"text-widget\" , \"\u003cencode\u003e{\"html\":\"\u003cbr\u003e\\n\u003cbr\u003e\\n\u003cdiv class \u003d\\\"mainKPI2\\\"\u003e\\n    \u003cfont color\u003d\\\"#28aae1\\\"\u003eSelect a Stock to See Related Tweets\u003c/font\u003e\\n\u003c/div\u003e\\n\\n\u003cstyle\u003e\\n#TextWidget .mainKPI2{\\n\\tmargin: 0 auto;\\n\\tmargin-left: auto;\\n\\tmargin-right: auto;\\n\\ttext-align:center;\\n\\t\\n\\tfont-size: 20px;\\n\\tfont-weight: normal;\\n}\\n\u003c/style\u003e\",\"varList\":[{\"name\":\"\",\"query\":\"\"}],\"freeze\":false,\"loading\":true}\u003c/encode\u003e\" ) ;## Build the Default Handle ##Panel ( 0 ) | SetPanelLabel ( \"Explore a Stock\" ) ;Panel ( 0 ) | SetPanelView ( \"default-handle\" ) ;Panel ( 0 ) | SetPanelView ( \"default-handle\" , \"\u003cencode\u003e{ \"param\": true, \"json\":[\n    {\n        \"query\": \"## Import the Data ## API ( api_type \u003d [ \\\"JSON2\\\" ] , aliasMap \u003d [ { \\\"input_url\\\" : \\\"https://api.worldtradingdata.com/api/v1/stock?symbol\u003d@symbol0@\u0026api_token\u003d@api_token1@\\\" , \\\"input_method\\\" : \\\"get\\\" , \\\"symbol\\\" : \\\"\\\\\\\"symbol\\\\\\\"\\\" , \\\"name\\\" : \\\"\\\\\\\"name\\\\\\\"\\\" , \\\"price\\\" : \\\"\\\\\\\"price\\\\\\\"\\\" , \\\"day_change\\\" : \\\"\\\\\\\"day_change\\\\\\\"\\\" , \\\"change_pct\\\" : \\\"\\\\\\\"change_pct\\\\\\\"\\\" , \\\"last_trade_time\\\" : \\\"\\\\\\\"last_trade_time\\\\\\\"\\\" , \\\"root\\\" : \\\"\\\\\\\"data\\\\\\\"[]\\\" } ] ) | Select ( placeholder__symbol , placeholder__name , placeholder__price , placeholder__day_change , placeholder__change_pct , placeholder__last_trade_time ) .as ( [ symbol , name , price , day_change , change_pct , last_trade_time ] ) | Filter ( symbol0 \u003d\u003d [ \\\"\u003cstock\u003e\\\" ] ) | Filter ( api_token1 \u003d\u003d [ \\\"z5me79EzQmlzDutKTs1gd72rW82kJAoWOOyKVM1g2RtU0L85At1R1dcKruPx\\\" ] ) | Import ( frame \u003d [ CreateFrame ( frameType \u003d [ GRID ] , override \u003d [ false ] ) .as ( [ \\\"FRAME885319\\\" ] ) ] ) ; Database ( database \u003d [ \\\"911bf0e9-0378-45bd-9461-87238e9d3b2f\\\" ] ) | Select ( WEEKLY_DATA__Symbol , WEEKLY_DATA__open , WEEKLY_DATA__timestamp ) .as ( [ Symbol , open , timestamp ] ) | Import ( frame \u003d [ CreateFrame ( frameType \u003d [ GRID ] , override \u003d [ false ] ) .as ( [ \\\"FRAME159183\\\" ] ) ] ) ; Frame ( FRAME885319 ) | Select ( FRAME885319__change_pct , FRAME885319__day_change , FRAME885319__last_trade_time , FRAME885319__name , FRAME885319__price , FRAME885319__symbol ) .as ( [ change_pct , day_change , last_trade_time , name , price , symbol ] ) | Merge ( joins \u003d [ ( Symbol , inner.join , symbol ) ] , frame \u003d [ FRAME159183 ] ) ; RemoveFrame ( \\\"FRAME885319\\\" ) ; FRAME159183 | Convert ( frameType \u003d [ R ] ) .as ( [ \u0027FRAME159183\u0027 ] ) ; FRAME159183 | ChangeColumnType ( column \u003d [ price ] , dataType \u003d [ \\\"NUMBER\\\" ] ) ; FRAME159183 | AddColumn ( newCol \u003d [ \\\"yahoo\\\" ] , dataType \u003d [ \\\"STRING\\\" ] ) ; FRAME159183 | UpdateRowValues ( yahoo , \\\"https://finance.yahoo.com/quote/\\\" , Filter ( price \u003e 0 ) ) ; FRAME159183 | JoinColumns ( newCol \u003d [ \\\"yahoofinance\\\" ] , delimiter \u003d [ \\\"\\\" ] , columns \u003d [ \\\"yahoo\\\" , \\\"Symbol\\\" ] ) ; ## Search for Twitter ## Frame ( FRAME159183 ) | Select ( name ) | FlatMapLambda ( lambda \u003d [ \\\"twittersearch\\\" ] , columns \u003d [ \\\"name\\\" ] , params \u003d [ { \\\"output\\\" : \\\"100\\\" , \\\"result_type\\\" : \\\"Mixed\\\" , \\\"geo_code\\\" : \\\"\\\" } ] ) | Merge ( joins \u003d [ ( name , inner.join , name ) ] , frame \u003d [ FRAME159183 ] ) ; ## Run Sentiment on the Tweets ## R ( \\\"\u003cencode\u003esentimentFrame \u003c- as.data.frame(unique(FRAME159183$review)); names(sentimentFrame) \u003c- c(\\\"review\\\"); sentimentFrame \u003c- score_sentiment(sentimentFrame); FRAME159183 \u003c- merge(FRAME159183,sentimentFrame,by\u003d\\\"review\\\"); FRAME159183 \u003c- as.data.table(FRAME159183);  \u003c/encode\u003e\\\" ) ; GenerateFrameFromRVariable(\\\"FRAME159183\\\"); ## Visualize ## Panel ( 1 ) | SetPanelView ( \\\"visualization\\\" , \\\"\u003cencode\u003e{\\\"type\\\":\\\"echarts\\\"}\u003c/encode\u003e\\\" ) ; if ( ( FRAME159183 | HasDuplicates ( timestamp ) ) , ( Frame ( frame \u003d [ FRAME159183 ] ) | Select ( timestamp , Average ( open ) ) .as ( [ timestamp , Average_of_open ] ) | Group ( timestamp ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \\\"1\\\" : { \\\"layout\\\" : \\\"Line\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"timestamp\\\" ] , \\\"value\\\" : [ \\\"Average_of_open\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame \u003d [ FRAME159183 ] ) | Select ( timestamp , open ) .as ( [ timestamp , open ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \\\"1\\\" : { \\\"layout\\\" : \\\"Line\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"timestamp\\\" ] , \\\"value\\\" : [ \\\"open\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) ) ; ( 1 ) | AddPanelOrnaments ( { \\\"tools\\\" : { \\\"shared\\\" : { \\\"toggleZoomX\\\" : true } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \\\"tools.shared.toggleZoomX\\\" ) ; Panel ( 1 ) | AddPanelOrnaments ( { \\\"tools\\\" : { \\\"shared\\\" : { \\\"editXAxis\\\" : { \\\"title\\\" : { \\\"show\\\" : true , \\\"name\\\" : \\\"Date\\\" } , \\\"values\\\" : true , \\\"line\\\" : true , \\\"format\\\" : { \\\"type\\\" : \\\"Default\\\" , \\\"delimiter\\\" : \\\"Default\\\" , \\\"prepend\\\" : \\\"\\\" , \\\"append\\\" : \\\"\\\" , \\\"maxLength\\\" : 10 } , \\\"rotate\\\" : 0 , \\\"nameGap\\\" : 25 , \\\"min\\\" : { \\\"show\\\" : false } , \\\"max\\\" : { \\\"show\\\" : false } } } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \\\"tools\\\" ) ; Panel ( 1 ) | AddPanelOrnaments ( { \\\"tools\\\" : { \\\"shared\\\" : { \\\"editYAxis\\\" : { \\\"title\\\" : { \\\"show\\\" : true , \\\"name\\\" : \\\"Stock Price\\\" } , \\\"values\\\" : true , \\\"line\\\" : true , \\\"rotate\\\" : 0 , \\\"nameGap\\\" : 25 , \\\"min\\\" : { \\\"show\\\" : false } , \\\"max\\\" : { \\\"show\\\" : false } , \\\"format\\\" : { \\\"delimiter\\\" : \\\",\\\" , \\\"prepend\\\" : \\\"$\\\" , \\\"type\\\" : \\\"Default\\\" , \\\"append\\\" : \\\"\\\" , \\\"maxLength\\\" : 10 } } } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \\\"tools\\\" ) ; Panel ( 2 ) | SetPanelView ( \\\"visualization\\\" , \\\"\u003cencode\u003e{\\\"type\\\":\\\"echarts\\\"}\u003c/encode\u003e\\\" ) ; if ( ( FRAME159183 | HasDuplicates ( name ) ) , ( Frame ( frame \u003d [ FRAME159183 ] ) | Select ( name , Average ( sentiment ) ) .as ( [ name , Average_of_sentiment ] ) | Group ( name ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \\\"2\\\" : { \\\"layout\\\" : \\\"Gauge\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"name\\\" ] , \\\"value\\\" : [ \\\"Average_of_sentiment\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame \u003d [ FRAME159183 ] ) | Select ( name , sentiment ) .as ( [ name , sentiment ] ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \\\"2\\\" : { \\\"layout\\\" : \\\"Gauge\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"name\\\" ] , \\\"value\\\" : [ \\\"sentiment\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) ) ;  Panel ( 2 ) | AddPanelOrnaments ( { \\\"tools\\\" : { \\\"shared\\\" : { \\\"minMax\\\" : { \\\"min\\\" : { \\\"show\\\" : true , \\\"value\\\" : - 1 } , \\\"max\\\" : { \\\"show\\\" : true , \\\"value\\\" : 1 } } } } } ) ; Panel ( 2 ) | RetrievePanelOrnaments ( \\\"tools\\\" ) ; yearAgo \u003d Frame ( frame \u003d [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp \u003d\u003d [ \\\"2018-09-21\\\" ]) | Collect(1); today \u003d Frame ( frame \u003d [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp \u003d\u003d [ \\\"2019-09-13\\\" ]) | Collect(1); weekAgo \u003d Frame ( frame \u003d [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp \u003d\u003d [ \\\"2019-09-06\\\" ]) | Collect(1); Panel ( 4 ) | SetPanelView ( \\\"text-widget\\\" , \\\"\u003cencode\u003e{\\\"html\\\":\\\"\u003cdiv class \u003d \\\\\\\"header\\\\\\\"\u003e \u003cfont size \u003d \\\\\\\"5\\\\\\\" color \u003d #fff\u003eTweets about {{tweets[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][2]}}\u003c/font\u003e\u003c/div\u003e\\n\u003cdiv ng-repeat\u003d\\\\\\\"item in tweets[0].output.data.values\\\\\\\" style\u003d\\\\\\\"word-wrap: break-word; margin-right: 25px\\\\\\\"\u003e\\n\u003cdiv id\u003d\\\\\\\"colorstrip\\\\\\\"\u003e\u003c/div\u003e\\n\u003col class\u003d\\\\\\\"KPI\\\\\\\"\u003e\\n\u003cli\u003e\u003cspan\u003e\u003c/span\u003e\u003cp class \u003d \\\\\\\"infoPiece\\\\\\\"\u003e\u003cb\u003eTweet: \u003c/b\u003e{{item[0]}}\u003c/p\u003e\u003c/li\u003e\\n\u003cli\u003e\u003cspan\u003e\u003c/span\u003e\u003cp class \u003d \\\\\\\"infoPiece\\\\\\\"\u003e\u003cb\u003eRetweets: \u003c/b\u003e{{item[1]}}\u003c/p\u003e\u003c/li\u003e\\n\u003c/ol\u003e\\n\u003c/div\u003e\\n\u003cstyle\u003e\\n#TextWidget #colorstrip{\\n    width: 100%; height: 2px;\\n    border-style: solid;\\n    border-color: #F0F0F0;\\n    background-color: #F0F0F0;\\n    margin-bottom: 10px;\\n}\\n#TextWidget .header{\\n\\tbackground-color: #28aae1;\\n\\tpadding-left: 10px;\\n}\\n#TextWidget ol{\\n  color: #000000;\\n  list-style-type: none;\\n}\\n#TextWidget ol li{\\n  position: relative;\\n  font: bold italic 16px/1.5 Helvetica, Verdana, sans-serif;\\n  margin-bottom: 10px;\\n  left: 5px;\\n}\\n#TextWidget li p.infoPiece{\\n  font: 16px/1.5 Helvetica, sans-serif;\\n  padding-left: 50px;\\n  color: #3b4d69;\\n}\\n#TextWidget .KPI span{\\n  position: absolute;\\n}\\n\u003c/style\u003e\\\",\\\"varList\\\":[{\\\"name\\\":\\\"tweets\\\",\\\"query\\\":\\\"Frame ( frame \u003d [ FRAME159183 ] ) | Select(review,retweet_count,name) | Sort( columns \u003d [ \\\\\\\"retweet_count\\\\\\\" ] , sort \u003d [ \\\\\\\"desc\\\\\\\" ] ) | Collect(10);\\\"}],\\\"freeze\\\":false,\\\"loading\\\":true}\u003c/encode\u003e\\\" ) ; Panel ( 3 ) | SetPanelView ( \\\"text-widget\\\" , \\\"\u003cencode\u003e{\\\"html\\\":\\\"\u003cdiv id\u003d\\\\\\\"projectFacts\\\\\\\" class\u003d\\\\\\\"sectionClass\\\\\\\"\u003e\\n    \u003cdiv class\u003d\\\\\\\"toggle-container\\\\\\\"\u003e\\n            \u003cbutton  ng-init\u003d\\\\\\\"toggle \u003d true\\\\\\\" class\u003d\\\\\\\"toggle-button\\\\\\\" ng-click\u003d\\\\\\\"toggle \u003d !toggle\\\\\\\"\u003e\u003cdiv ng-if\u003d\\\\\\\"toggle\\\\\\\"\u003eSee Data Flow\u003c/div\u003e\u003cdiv ng-if\u003d\\\\\\\"!toggle\\\\\\\"\u003eSee KPIs\u003c/div\u003e\u003c/button\u003e\\n    \u003c/div\u003e\\n    \u003cdiv ng-if\u003d\\\\\\\"!toggle\\\\\\\" class\u003d\\\\\\\"center\\\\\\\"\u003e\\n        \u003cimg src\u003d\\\\\\\"https://github.com/semossvideos/stock-description-image/blob/master/textwidgetpanel.JPG?raw\u003dtrue\\\\\\\" alt\u003d\\\\\\\"test\\\\\\\" class\u003d\\\\\\\"center\\\\\\\"\u003e\\n    \u003c/div\u003e\\n    \u003cdiv class\u003d\\\\\\\"fullWidth eight columns\\\\\\\" ng-if\u003d\\\\\\\"toggle\\\\\\\"\u003e\\n        \u003cdiv class\u003d\\\\\\\"projectFactsWrap \\\\\\\"\u003e\\n            \u003cdiv class\u003d\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number\u003d\\\\\\\"5\\\\\\\" style\u003d\\\\\\\"visibility: visible;\\\\\\\"\u003e\\n                \u003cp id\u003d\\\\\\\"number1\\\\\\\" class\u003d\\\\\\\"number\\\\\\\"\u003e\u003ca href\u003d\u0027{{Symbol[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][1]}}\u0027\u003e{{Symbol[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][0]}}\u003c/a\u003e\u003c/p\u003e\\n                \u003cspan\u003e\u003c/span\u003e\\n                \u003cp\u003eSymbol (Control + Click)\u003c/p\u003e\\n            \u003c/div\u003e\\n            \u003cdiv class\u003d\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number\u003d\\\\\\\"77\\\\\\\" style\u003d\\\\\\\"visibility: visible;\\\\\\\"\u003e\\n                \u003cp id\u003d\\\\\\\"number2\\\\\\\" class\u003d\\\\\\\"number\\\\\\\"\u003e${{curQuote[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][0] | number:2}}\u003c/p\u003e\\n                \u003cspan\u003e\u003c/span\u003e\\n                \u003cp\u003eQuote ({{Symbol[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][2]}})\u003c/p\u003e\\n            \u003c/div\u003e\\n            \u003cdiv class\u003d\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number\u003d\\\\\\\"1988\\\\\\\" style\u003d\\\\\\\"visibility: visible;\\\\\\\"\u003e\\n                \u003cp id\u003d\\\\\\\"number3\\\\\\\" class\u003d\\\\\\\"number\\\\\\\"\u003e{{yearAgo[0][\\\\\\\"output\\\\\\\"] | number:1}}%\u003c/p\u003e\\n                \u003cspan\u003e\u003c/span\u003e\\n                \u003cp\u003eLast 12 Month Performance\u003c/p\u003e\\n            \u003c/div\u003e\\n            \u003cdiv class\u003d\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number\u003d\\\\\\\"14,367,000\\\\\\\" style\u003d\\\\\\\"visibility: visible;\\\\\\\"\u003e\\n                \u003cp id\u003d\\\\\\\"number4\\\\\\\" class\u003d\\\\\\\"number\\\\\\\"\u003e{{weekAgo[0][\\\\\\\"output\\\\\\\"] | number: 1}}%\u003c/p\u003e\\n                \u003cspan\u003e\u003c/span\u003e\\n                \u003cp\u003eLast Week Performance\u003c/p\u003e\\n            \u003c/div\u003e\\n\\t\\t\\t\u003cdiv class\u003d\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number\u003d\\\\\\\"14,367,000\\\\\\\" style\u003d\\\\\\\"visibility: visible;\\\\\\\"\u003e\\n                \u003cp id\u003d\\\\\\\"number5\\\\\\\" class\u003d\\\\\\\"number\\\\\\\"\u003e{{sentiment[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][0] | number: 3}}\u003c/p\u003e\\n                \u003cspan\u003e\u003c/span\u003e\\n                \u003cp\u003eAverage Sentiment\u003c/p\u003e\\n            \u003c/div\u003e\\n        \u003c/div\u003e\\n    \u003c/div\u003e\\n\u003c/div\u003e\\n\\n\u003cstyle\u003e\\n\\n#TextWidget {\\n    --teal: #00a8c1;\\n    --dark-blue: #17233c;\\n    --smoke-gray: #efefef;\\n}\\n\\n#TextWidget .toggle-container {\\n        /* margin-top: 5px; */\\n        margin-bottom: 10px;\\n    }\\n\\n#TextWidget .toggle-container button {\\n    float: right;\\n    margin-right: 25px;\\n    margin-top: 5px;\\n    background-color: var(--teal);\\n    color: white;\\n    font-size: .9em;\\n    cursor: pointer;      \\n    padding: 8px;  \\n    border-radius: 2px;\\n    outline: none;\\n    border: none;\\n}\\n\\n#TextWidget .center{\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 80%;\\n}\\n\\n#TextWidget body{\\n font-size: 13px;\\n  color: #3b4d69;\\n  position: relative;\\n  -webkit-font-smoothing: antialiased;\\n  margin: 0;\\n}\\n\\n#TextWidget *{\\n  -webkit-box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n  box-sizing: border-box;\\n}\\n\\n#TextWidget body, #TextWidget div, #TextWidget dl, #TextWidget dt, #TextWidget dd, #TextWidget ul, #TextWidget ol, #TextWidget li, #TextWidget h1, #TextWidget h2, #TextWidget h3, #TextWidget h4, #TextWidget h5, #TextWidget h6, #TextWidget pre, #TextWidget form, #TextWidget p, #TextWidget blockquote, #TextWidget th, #TextWidget td{\\n  margin: 0;\\n  padding: 0;\\n  font-size: 13px;\\n  direction: ltr;\\n}\\n\\n#TextWidget .sectionClass{\\n  padding: 20px 0px 45px 0px;\\n  position: relative;\\n  display: block;\\n}\\n\\n#TextWidget .fullWidth{\\n  width: 100%;\\n  display: table;\\n  float: none;\\n  padding: 0;\\n  min-height: 1px;\\n  height: 100%!;\\n  position: relative;\\n}\\n\\n\\n#TextWidget .sectiontitle{\\n  background-position: center;\\n  margin: 0px 0 0px;\\n  text-align: center;\\n  min-height: 0px;\\n}\\n\\n#TextWidget .sectiontitle h2{\\n  font-size: 10px;\\n  color: #FFF;\\n  margin-bottom: 0px;\\npadding-right: 10px;\\npadding-left: 10px;\\n}\\n\\n\\n#TextWidget .headerLine{\\n  width: 0px;\\n  height: 0px;\\n  display: inline-block;\\n  background: #FFF;\\n}\\n\\n\\n#TextWidget .projectFactsWrap{\\n    display: flex;\\n  margin-top: 0px;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n}\\n\\n\\n#TextWidget #projectFacts .fullWidth{\\n  padding: 0;\\n}\\n\\n#TextWidget .projectFactsWrap .item{\\n  width: 20%;\\n  height: 100%;\\n  padding: 14px 0px;\\n  text-align: center;\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(1){\\n  background: #F0F0F0;\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(2){\\n  background: #F0F0F0;\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(3){\\n  background: #F0F0F0;\\n}\\n#TextWidget .projectFactsWrap .item:nth-child(4){\\n  background: #F0F0F0;\\n}\\n#TextWidget .projectFactsWrap .item:nth-child(5){\\n  background: #F0F0F0;\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(6){\\n  background: #F0F0F0;\\n}\\n\\n#TextWidget .projectFactsWrap .item p.number{\\n  font-size: 37px;\\n  padding: 0;\\n  font-weight: bold;\\n}\\n\\n#TextWidget .projectFactsWrap .item p{\\n  color: #143f5b;\\n  font-size: 18px;\\n  margin: 0;\\n  padding: 8px;\\n \\n}\\n\\n\\n#TextWidget .projectFactsWrap .item span{\\n  width: 60px;\\n  background: #143f5b;\\n  height: 2px;\\n  display: block;\\n  margin: 0 auto;\\n}\\n\\n\\n#TextWidget .projectFactsWrap .item i{\\n  vertical-align: middle;\\n  font-size: 50px;\\n  color: #6c82a7;\\n}\\n\\n\\n#TextWidget .projectFactsWrap .item:hover i, #TextWidget .projectFactsWrap .item:hover p{\\n  color: black;\\n}\\n\\n#TextWidget .projectFactsWrap .item:hover span{\\n  background: black;\\n}\\n\\n#TextWidget @media (max-width: 786px){\\n  .projectFactsWrap .item {\\n     flex: 0 0 50%;\\n  }\\n#TextWidget }\\n\\n\\n#TextWidget .trans{\\n  opacity: 1;\\n  -webkit-transform: translateX(0px);\\n  transform: translateX(0px);\\n  -webkit-transition: all 500ms ease;\\n  -moz-transition: all 500ms ease;\\n  transition: all 500ms ease;\\n\\n\u003c/style\u003e\\\",\\\"varList\\\":[{\\\"name\\\":\\\"Symbol\\\",\\\"query\\\":\\\"Frame ( frame \u003d [ FRAME159183 ] ) | Select ( Symbol,yahoofinance,last_trade_time ) | Collect ( 1 ) ;\\\"},{\\\"name\\\":\\\"yearAgoVar\\\",\\\"query\\\":\\\"yearAgo \u003d Frame ( frame \u003d [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp \u003d\u003d [ \\\\\\\"2018-09-21\\\\\\\" ]) | Collect(1);\\\"},{\\\"name\\\":\\\"todayVar\\\",\\\"query\\\":\\\"today \u003d Frame ( frame \u003d [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp \u003d\u003d [ \\\\\\\"2019-09-13\\\\\\\" ]) | Collect(1);\\\"},{\\\"name\\\":\\\"weekAgoVar\\\",\\\"query\\\":\\\"weekAgo \u003d Frame ( frame \u003d [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp \u003d\u003d [ \\\\\\\"2019-09-06\\\\\\\" ]) | Collect(1);\\\"},{\\\"name\\\":\\\"curQuote\\\",\\\"query\\\":\\\"Frame ( frame \u003d [ FRAME159183 ] ) | Select(Average(price)) | Collect(1);\\\"},{\\\"name\\\":\\\"yearAgo\\\",\\\"query\\\":\\\"( 100 * ( today / yearAgo - 1 ) )\\\"},{\\\"name\\\":\\\"weekAgo\\\",\\\"query\\\":\\\"( 100 * ( today / weekAgo- 1 ) )\\\"},{\\\"name\\\":\\\"sentiment\\\",\\\"query\\\":\\\"Frame ( frame \u003d [ FRAME159183 ] ) | Select(Average(sentiment)) | Collect(1);\\\"}],\\\"freeze\\\":false,\\\"loading\\\":true}\u003c/encode\u003e\\\" ) ; \",\n        \"label\": \"Explore a Stock\",\n        \"params\": [\n            {\n                \"paramName\": \"search\",\n                \"view\": false,\n                \"model\": {\n                    \"defaultValue\": \"\"\n                }\n            },\n            {\n                \"paramName\": \"stock\",\n                \"required\": true,\n                \"view\": {\n                    \"displayType\": \"dropdown\",\n                    \"label\": \"Select a Stock to Explore\"\n                },\n                \"model\": {\n                    \"query\": \"(infinite \u003d Database ( database \u003d [ \\\"911bf0e9-0378-45bd-9461-87238e9d3b2f\\\" ] ) | Select ( WEEKLY_DATA__Symbol ) | Filter(WEEKLY_DATA__Symbol ?like \\\"\u003csearch\u003e\\\") | Iterate()) | Collect(50);\",\n                    \"infiniteQuery\": \"infinite | Collect(50);\",\n                    \"searchParam\": \"search\",\n                    \"dependsOn\": [\n                        \"search\",\n                        \"filterChoice\"\n                    ]\n                }\n            }\n        ],\n        \"execute\": \"button\"\n    }\n]}\u003c/encode\u003e\" ) ;## Style the KPI Panel ##Panel ( 3 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"opacity\" : 100 , \"type\" : \"STANDARD\" , \"backgroundColor\" : \"#F0F0F0\" , \"zIndex\" : 1 } } ] ) ;Panel ( 3 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"watermark\" : \"\" , \"backgroundColor\" : \"#F0F0F0\" } } } ) ;Panel ( 3 ) | RetrievePanelOrnaments ( \"tools\" ) ;Panel ( 3 ) | SetPanelLabel ( \"KPIs\" ) ;Panel(0)|SetPanelPosition({\"top\":0,\"left\":0,\"width\":33.33333333333333,\"height\":28.62595419847328});Panel(1)|SetPanelPosition({\"top\":28.62595419847328,\"left\":0,\"width\":33.33333333333333,\"height\":71.37404580152672});Panel(2)|SetPanelPosition({\"top\":38.67684478371501,\"left\":66.66666666666666,\"width\":33.33333333333333,\"height\":61.32315521628499});Panel(3)|SetPanelPosition({\"top\":0,\"left\":33.28125,\"width\":66.66666666666666,\"height\":38.295165394402034});Panel(4)|SetPanelPosition({\"top\":38.80407124681934,\"left\":33.33333333333333,\"width\":33.33333333333333,\"height\":61.19592875318066});",
  "engineId": "911bf0e9-0378-45bd-9461-87238e9d3b2f"
}